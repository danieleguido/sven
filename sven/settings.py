"""
Django settings for sven project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_URL = ''

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u=oqs^gv75+h#2b!*3shr%%ce%kq6tfm#p@j+p%d6uj5ba_@8_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

SVEN_NAME = 'SVEN'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ws4redis',
    # 'rest_framework',
    'sven'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sven.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'client'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = [
  os.path.join(BASE_DIR, 'client/src'),
]


WSGI_APPLICATION = 'sven.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# websocket with redis
WEBSOCKET_URL = '/ws/'
WS4REDIS_PREFIX = 'ws'


MEDIA_ROOT = os.path.join(BASE_DIR, "media/")

EN = 'en'
IT = 'it'
FR = 'fr'
NL = 'nl'
ES = 'es'

LANGUAGE_CHOICES = (
  (EN, u'english'),
  (FR, u'french'),
  (NL, u'dutch'),
  (IT, u'italian'),
  (ES, u'spanish'),
)


SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS_PREFIX = 'session'

WHOOSH_PATH     = os.path.join(BASE_DIR, 'contents/whoosh')
STOPWORDS_PATH  = os.path.join(BASE_DIR, 'contents/stopwords') # Cfr models.Corpus.get_stopwords_path(). Path where txt stopwords files has to be stored.

MAX_CORPORA_PER_USER = 2 # max number of corpus per not admin user
STANDALONE_COMMANDS = ['harvest', 'whoosher', 'freebase'] # standalone management commands.
ADMIN_COMMANDS = ['removecorpus', 'clean', 'cleansegments']

# the settings above are the generic ones. Shall you need to change something, use a local_settings.py file instead.
try:
    from local_settings import *
except ImportError:
    pass